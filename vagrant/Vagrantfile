# -*- mode: ruby -*-
# vi:set ft=ruby sw=2 ts=2 sts=2:

# Define the number of master and worker nodes
# If this number is changed, remember to update setup-hosts.sh script with the new hosts IP details in /etc/hosts of each VM.
NUM_MASTER_NODE = 2
NUM_WORKER_NODE = 2

IP_NW = "172.30.221."
MASTER_IP_START = 10
NODE_IP_START = 20
LB_IP_START = 30

File.delete("etc-hosts") if File.exist?("etc-hosts")
out_file = File.new("etc-hosts", "w")
out_file.puts("localhost 127.0.0.1")
out_file.close

#File.open("out.txt", "w") do |f|     
#  f.write(data_you_want_to_write)   
#end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "base"
  config.vm.box = "hashicorp/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  config.vm.synced_folder ".", "/vagrant", type: "rsync"
  #  smb_password:ENV['SMB_PASSWORD'], smb_username:ENV['SMB_USER']
  #  mount_options: ["username=mymail@live.ru","password=mypass"]

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Provision Master Nodes
  (1..NUM_MASTER_NODE).each do |i|
      config.vm.define "master-#{i}" do |node|
        # Name shown in the GUI
        node.vm.provider "hyperv" do |h|
          h.vmname = "kubernetes-ha-master-#{i}"
          h.memory = 1024
          h.cpus = 2
          h.linked_clone = true
        end
        node.vm.hostname = "master-#{i}"
        node.vm.network :private_network, bridge: "Default Switch"
        node.vm.network "forwarded_port", guest: 22, host: "#{2710 + i}"
        node.vm.provision :shell, :inline => "sudo ln -fs /vagrant/etc-hosts /etc/hosts"        
        node.vm.provision "setup-interface", :type => "shell", :path => "ubuntu/vagrant/setup-interface.sh" do |s|
          s.args = [IP_NW + "#{MASTER_IP_START + i}"]
        end
        node.vm.provision "setup-hosts", :type => "shell", :path => "ubuntu/vagrant/setup-hosts.sh" do |s|
          s.args = ["eth0"]
        end        
        node.vm.provision "setup-dns", type: "shell", :path => "ubuntu/update-dns.sh"
      end
  end

  # Provision Load Balancer Node
      config.vm.define "loadbalancer" do |node|
        node.vm.provider "hyperv" do |h|
          h.vmname = "kubernetes-ha-lb"
          h.memory = 512
          h.cpus = 1
          h.linked_clone = true
        end
        node.vm.hostname = "loadbalancer"
        node.vm.network :private_network, bridge: "Default Switch"
        node.vm.network "forwarded_port", guest: 22, host: 2730
        node.vm.provision :shell, :inline => "sudo ln -fs /vagrant/etc-hosts /etc/hosts"        
        node.vm.provision "setup-interface", :type => "shell", :path => "ubuntu/vagrant/setup-interface.sh" do |s|
          s.args = [IP_NW + "#{LB_IP_START}"]
        end
        node.vm.provision "setup-hosts", :type => "shell", :path => "ubuntu/vagrant/setup-hosts.sh" do |s|
          s.args = ["eth0"]
        end        
        node.vm.provision "setup-dns", type: "shell", :path => "ubuntu/update-dns.sh"
      end

  # Provision Worker Nodes
  (1..NUM_WORKER_NODE).each do |i|
    config.vm.define "worker-#{i}" do |node|
        node.vm.provider "hyperv" do |h|
          h.vmname = "kubernetes-ha-worker-#{i}"
          h.memory = 1024
          h.cpus = 2
          h.linked_clone = true
        end
        node.vm.hostname = "worker-#{i}"
        node.vm.network :private_network, bridge: "Default Switch"
        node.vm.network "forwarded_port", guest: 22, host: "#{2720 + i}"
        node.vm.provision :shell, :inline => "sudo ln -fs /vagrant/etc-hosts /etc/hosts"  
        node.vm.provision "setup-interface", :type => "shell", :path => "ubuntu/vagrant/setup-interface.sh" do |s|
          s.args = [IP_NW + "#{NODE_IP_START + i}"]
        end              
        node.vm.provision "setup-hosts", :type => "shell", :path => "ubuntu/vagrant/setup-hosts.sh" do |s|
          s.args = ["eth0"]
        end
        node.vm.provision "setup-dns", type: "shell", :path => "ubuntu/update-dns.sh"
        node.vm.provision "install-docker", type: "shell", :path => "ubuntu/install-docker.sh"
        node.vm.provision "allow-bridge-nf-traffic", :type => "shell", :path => "ubuntu/allow-bridge-nf-traffic.sh"
    end
  end

end
